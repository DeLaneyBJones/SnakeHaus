{"version":3,"sources":["webpack:///./src/app/reptile-list/reptile-list.module.ts","webpack:///./src/app/reptile-list/reptile-list.page.html","webpack:///./src/app/reptile-list/reptile-list.page.scss","webpack:///./src/app/reptile-list/reptile-list.page.ts"],"names":[],"mappings":"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","file":"reptile-list-reptile-list-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ReptileListPage } from './reptile-list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ReptileListPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ReptileListPage]\n})\nexport class ReptileListPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color='primary'>\\n    <ion-title>Reptiles</ion-title>\\n  </ion-toolbar>\\n  <ion-toolbar color='primary'>\\n    <ion-searchbar [(ngModel)]=\\\"searchQuery\\\" (ionInput)=\\\"getReptiles($event)\\\" (ionClear)=\\\"resetList($event)\\\">\\n    </ion-searchbar>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-virtual-scroll [items]=\\\"reptiles\\\" [headerFn]=\\\"customHeaderFn\\\">\\n      <ion-item-divider *virtualHeader='let header'>\\n        {{header}}\\n      </ion-item-divider>\\n      <ion-item *virtualItem=\\\"let snake\\\" (click)=\\\"goReptileDetails(snake)\\\" detail-push>\\n        <ion-thumbnail slot=\\\"start\\\" *ngIf='snake.Picture != null'>\\n          <ion-img src=\\\"snake.Picture\\\"></ion-img>\\n        </ion-thumbnail>\\n        <ion-thumbnail slot=\\\"start\\\" *ngIf='snake.Picture == null'>\\n          <ion-img src=\\\"../assets/img/SnakeHausLogo.png\\\"></ion-img>\\n        </ion-thumbnail>\\n        <ul class=\\\"clear\\\">\\n          <li class=\\\"clear\\\"><h2>{{snake.SnakeName}}</h2></li>\\n          <li class=\\\"clear\\\"><p>{{snake.Species}}</p></li>\\n        </ul>\\n      </ion-item>\\n      </ion-virtual-scroll>\\n  </ion-list>\\n\\n</ion-content>\\n\"","module.exports = \"page-reptile-list ion-item-divider {\\n  background-color: #82b786;\\n  font-weight: bold; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWxhbmV5am9uZXMvRG9jdW1lbnRzLzQ0NS80NDVSZXB0aWxlUHJvamVjdC9TbmFrZUhhdXMvc3JjL2FwcC9yZXB0aWxlLWxpc3QvcmVwdGlsZS1saXN0LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVRLHlCQUF5QjtFQUN6QixpQkFBaUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3JlcHRpbGUtbGlzdC9yZXB0aWxlLWxpc3QucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsicGFnZS1yZXB0aWxlLWxpc3Qge1xuICAgIGlvbi1pdGVtLWRpdmlkZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjODJiNzg2O1xuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICB9XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\n\nimport { ReptileData } from '../providers/reptile-data';\nimport { NavController } from '@ionic/angular';\n\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-reptile-list',\n  templateUrl: './reptile-list.page.html',\n  styleUrls: ['./reptile-list.page.scss'],\n})\nexport class ReptileListPage implements OnInit {\n\n  reptiles: Array<Object> = [];\n  searchQuery: string = '';\n\n  constructor(public navCtrl: NavController, public reptileData: ReptileData, public router: Router) {\n    reptileData.getReptiles().then(theResult => {\n      this.reptiles = theResult;\n    })\n   }\n\n   goReptileDetails(theReptileData){\n     let url = './tabs/details/' + theReptileData.SnakeName;\n     this.router.navigate([url]); \n   }\n\n   getReptiles(event)\n   {\n     this.reptileData.getReptiles().then(theResult => {\n       this.reptiles = theResult;\n     })\n     let queryString = event.target.value;\n     if(queryString != undefined)\n     {\n       if(queryString.trim() == '')\n       {\n         return;\n       }\n       this.reptileData.getFilteredReptiles(queryString).then(theResult => {\n         this.reptiles = theResult;\n       })\n     }\n   }\n\n   resetList(event)\n   {\n     this.reptileData.getReptiles().then(theResult => {\n       this.reptiles = theResult;\n     })\n   }\n\n   customHeaderFn(record, recordIndex, records){\n    if(recordIndex > 0)\n    {\n        if(record.SnakeName[0] !== records[recordIndex-1].SnakeName[0]){\n            return record.SnakeName[0];\n        } else {\n            return null;\n        }\n    } else {\n        return record.SnakeName[0];\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":""}