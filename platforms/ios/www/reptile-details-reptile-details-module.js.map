{"version":3,"sources":["webpack:///./src/app/reptile-details/reptile-details.module.ts","webpack:///./src/app/reptile-details/reptile-details.page.html","webpack:///./src/app/reptile-details/reptile-details.page.scss","webpack:///./src/app/reptile-details/reptile-details.page.ts"],"names":[],"mappings":"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","file":"reptile-details-reptile-details-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ReptileDetailsPage } from './reptile-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ReptileDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ReptileDetailsPage]\n})\nexport class ReptileDetailsPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button defaultHref=\\\"tabs/reptiles\\\"></ion-back-button>\\n    </ion-buttons>    \\n    <ion-title>{{reptileInfo.SnakeName}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-grid>\\n    <ion-row *ngIf=\\\"reptileInfo.Picture != null\\\"><img src='{{reptileInfo.Picture}}'></ion-row>\\n  </ion-grid>\\n  <ion-grid>\\n    <ion-row *ngIf=\\\"reptileInfo.Picture == null\\\"><img src='../../assets/img/SnakeHausLogo.png'></ion-row>\\n  </ion-grid>\\n  \\n  <h1 padding >{{reptileInfo.SnakeName}}</h1>\\n  <ion-card>\\n    <ion-card-header>\\n      {{reptileInfo.SnakeName}}\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-item (click)=\\\"this.basicInfo = !this.basicInfo\\\">\\n        <h2>Basic Information</h2>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"basicInfo\\\" id=\\\"InfoSort\\\">\\n        <ion-grid>\\n          <ion-row *ngIf=\\\"reptileInfo.SnakeName != null\\\"><h2>Name:</h2><p>{{reptileInfo.SnakeName}}</p></ion-row>\\n          <ion-row *ngIf=\\\"reptileInfo.Species != null\\\"><h2>Species:</h2><p>{{reptileInfo.Species}}</p></ion-row>\\n          <ion-row *ngIf=\\\"reptileInfo.Morph != null\\\"><h2>Morph: </h2> <p>{{reptileInfo.Morph}}</p></ion-row>\\n          <ion-row *ngIf=\\\"reptileInfo.BirthDay != null\\\"><h2>DoB: </h2> <p>{{reptileInfo.BirthDay}}</p></ion-row>\\n          <ion-row *ngIf=\\\"reptileInfo.Handling != null\\\"><h2>Handling: </h2> <p>{{reptileInfo.Handling}}</p></ion-row>\\n          <ion-row *ngIf=\\\"reptileInfo.Aquired != null\\\"><h2>Aquired: </h2> <p>{{reptileInfo.Aquired}}</p></ion-row>\\n          <ion-row *ngIf=\\\"reptileInfo.ScaleVentral != null\\\"><h2>Scale Ventral: </h2> <p>{{reptileInfo.ScaleVentral}}</p></ion-row>\\n          <ion-row *ngIf=\\\"reptileInfo.ScaleMid != null\\\"><h2>ScaleMid: </h2> <p>{{reptileInfo.ScaleMid}}</p></ion-row>\\n          <ion-row *ngIf=\\\"reptileInfo.ScaleSubCauudal != null\\\"><h2>ScaleSubCauudal: </h2> <p>{{reptileInfo.ScaleSubCauudal}}</p></ion-row>\\n          <ion-row *ngIf=\\\"reptileInfo.Saddles != null\\\"><h2>Saddles: </h2> <p>{{reptileInfo.Saddles}}</p></ion-row>\\n          <ion-row *ngIf=\\\"reptileInfo.ScaleCount5 != null\\\"><h2>ScaleCount5: </h2> <p>{{reptileInfo.ScaleCount5}}</p></ion-row>\\n          <ion-row *ngIf=\\\"reptileInfo.Location != null\\\"><h2>Location: </h2><p>{{reptileInfo.Location}}</p></ion-row>\\n          <ion-row *ngIf=\\\"reptileInfo.Active != null\\\"><h2>Active: </h2><p>{{reptileInfo.Active}}</p></ion-row>\\n          <ion-row *ngIf=\\\"reptileInfo.Adopter != null\\\"><h2>Active: </h2><p>{{reptileInfo.Adopter}}</p></ion-row>\\n          <ion-row *ngIf=\\\"reptileInfo.AdoptionDate != null\\\"><h2>Adoption Date: </h2>{{reptileInfo.AdoptionDate}}</ion-row>\\n          \\n          <ion-row *ngIf=\\\"(reptileInfo.SnakeName == null) && (reptileInfo.Species == null) && (reptileInfo.Morph == null) && (reptileInfo.BirthDay == null) && (reptileInfo.Aquired == null) && (reptileInfo.ScaleVentral == null) && (reptileInfo.ScaleSubCauudal == null) && (reptileInfo.Saddles == null) && (reptileInfo.ScaleCount5 == null) && (reptileInfo.Location == null) && (reptileInfo.Active == null) && (reptileInfo.Adopter == null) && (reptileInfo.AdoptionDate == null)\\\">\\n            No information is currently avaliable\\n          </ion-row>\\n        </ion-grid>\\n      </ion-item>\\n\\n      <ion-item (click)=\\\"this.feed = !this.feed\\\">\\n        <h2>Feed</h2>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"feed\\\" id=\\\"InfoSort\\\">\\n        <ion-grid>\\n          <ion-row *ngIf=\\\"feedInfo.Food != null\\\"><h2>Food:</h2><p>{{feedInfo.Food}}</p></ion-row>\\n          <ion-row *ngIf=\\\"feedInfo.Frequency != null\\\"><h2>Frequency:</h2><p>{{feedInfo.Frequency}}</p></ion-row>\\n          <ion-row *ngIf=\\\"(feedInfo.Food == null) && (feedInfo.Frequency == null)\\\">No information is currently avaliable</ion-row>\\n        </ion-grid>\\n      </ion-item>\\n\\n      <ion-item (click)=\\\"this.observations = !this.observations\\\">\\n        <h2>Observations</h2>\\n      </ion-item>\\n      <ion-virtual-scroll *ngIf=\\\"observations\\\" id=\\\"InfoSort\\\" [items]=\\\"observationInfo\\\">\\n        <ion-grid *virtualItem=\\\"let item\\\">\\n          <ion-row *ngIf=\\\"(item.Observation != null) && (item.O_Date != null)\\\" id=\\\"InfoSort\\\">\\n            <ion-row><p>{{item.O_Date}}   {{item.Observation}}</p></ion-row>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-virtual-scroll>\\n      <ion-row *ngIf=\\\"(observationInfo.length == 0) && observations\\\">No information is currently avaliable</ion-row>\\n\\n      <ion-item (click)=\\\"this.feedSchedInfo = !this.feedSchedInfo\\\">\\n        <h2>Feed Schedule</h2>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"feedSchedInfo\\\" id=\\\"InfoSort\\\">\\n        <ion-grid>\\n          <ion-row *ngIf=\\\"feedSchedule.F_Date != null\\\">Date: {{feedSchedule.F_Date}}</ion-row>\\n          <ion-row *ngIf=\\\"feedSchedule.Food != null\\\">Food: {{feedSchedule.Food}}</ion-row>\\n          <ion-row *ngIf=\\\"feedSchedule.Comment != null\\\">Comment: {{feedSchedule.Comment}}</ion-row>\\n          <ion-row *ngIf=\\\"(feedSchedule.F_Date == null) && (feedSchedule.Food == null) && (feedSchedule.Comment == null)\\\">No information is currently avaliable</ion-row>\\n        </ion-grid>\\n      </ion-item>\\n\\n      <ion-item (click)=\\\"this.medication = !this.medication\\\">\\n        <h2>Medication</h2>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"medication\\\">\\n        <ion-grid>\\n          <ion-row *ngIf=\\\"medsInfo.RxDate != null\\\">Date: {{medsInfo.RxDate}}</ion-row>\\n          <ion-row *ngIf=\\\"medsInfo.Rx != null\\\">Rx: {{medsInfo.Rx}}</ion-row>\\n          <ion-row *ngIf=\\\"medsInfo.NextRx != null\\\">NextRx: {{medsInfo.NextRx}}</ion-row>\\n          <ion-row *ngIf=\\\"(medsInfo.RxDate == null) && (medsInfo.Rx == null) && (medsInfo.NextRx == null)\\\">No information is currently avaliable</ion-row>\\n        </ion-grid>\\n      </ion-item>\\n\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\"","module.exports = \"ul {\\n  list-style-type: none; }\\n\\n#InfoSort h2 {\\n  padding-right: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWxhbmV5am9uZXMvRG9jdW1lbnRzLzQ0NS80NDVSZXB0aWxlUHJvamVjdC9TbmFrZUhhdXMvc3JjL2FwcC9yZXB0aWxlLWRldGFpbHMvcmVwdGlsZS1kZXRhaWxzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHFCQUFxQixFQUFBOztBQUd6QjtFQUdRLGtCQUFrQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvcmVwdGlsZS1kZXRhaWxzL3JlcHRpbGUtZGV0YWlscy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ1bCB7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xufVxuXG4jSW5mb1NvcnRcbntcbiAgICBoMiB7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDFlbTtcbiAgICB9XG59Il19 */\"","import { Component, ViewChild } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { FeedData } from '../providers/feed-data';\nimport { FeedSchedule } from '../providers/feed-schedule';\nimport { ReptileData } from '../providers/reptile-data'\nimport { MedsData } from '../providers/meds-data';\nimport { ObservationData } from '../providers/observations-data';\n\n\n\n\n@Component({\n  selector: 'app-reptile-details',\n  templateUrl: './reptile-details.page.html',\n  styleUrls: ['./reptile-details.page.scss'],\n})\n\nexport class ReptileDetailsPage {\n\n  reptileInfo: Object;\n  feedInfo: Object;\n  feedSchedule: Object;\n  medsInfo: Object;\n  observationInfo: Array<Object>;\n\n  feedSchedInfo: Boolean;\n  observations: Boolean;\n  feed: Boolean;\n  basicInfo: Boolean;\n  medication: Boolean;\n\n  constructor(public reptileData: ReptileData, public feedData: FeedData, public feedSched: FeedSchedule, public medsData: MedsData, public obsData: ObservationData, public route: ActivatedRoute) {\n    var name = this.route.snapshot.paramMap.get('id');\n    this.reptileInfo = reptileData.getReptile(name);\n    this.feedInfo = feedData.getFeed(name);\n    this.feedSchedule = feedSched.getFeedSchedule(name);\n    this.medsInfo = medsData.getMeds(name);\n    this.observationInfo = obsData.getObservations(name);\n    console.log(\"this.observationInfo: \");\n    console.log(this.observationInfo);\n\n    this.feedSchedInfo = false;    \n    this.observations = false;\n    this.feed = false;\n    this.basicInfo = false;\n    this.medication = false;\n\n  }\n\n}\n"],"sourceRoot":""}